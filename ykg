#!/bin/bash
export BASE_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$BASE_PATH/scripts/cli.sh"
source "$BASE_PATH/scripts/crypt.sh"

KEY_ID="$(< "$BASE_PATH/GPG/GonzaloAlvarez-MasterGPG-pubkey.keyid")"
CURL="$(which curl)"

if [ "$1" == "-q" ]; then
    VERBOSITY=0
    shift
fi

if [ "$1" == "enc" ]; then
    _GPG_HOME="$(curl -s -o - http://127.0.0.1:12116/gpghome)"
    if [ "$_GPG_HOME" ]; then
        _info "Encrypting file [$1] and storing it in [$2]"
        $(which gpg) -q --home "$_GPG_HOME" --armor --encrypt --recipient "$KEY_ID" -o "$3" "$2"
    else
        _fatal "Server not running"
    fi
elif [ "$1" == "dec" ]; then
    _GPG_HOME="$(curl -s -o - http://127.0.0.1:12116/gpghome)"
    if [ "$_GPG_HOME" ]; then
        _info "Decrypting file [$1] and storing result in [$2]"
        $(which gpg) -q --home "$_GPG_HOME" --armor --decrypt -o "$3" "$2"
    else
        _fatal "Server not running"
    fi
elif [ "$1" == "gpg" ]; then
    _GPG_HOME="$(curl -s -o - http://127.0.0.1:12116/gpghome)"
    if [ "$_GPG_HOME" ]; then
        $(which gpg) -q --home "$_GPG_HOME" $@
    else
        _fatal "Server not running"
    fi
elif [ "$1" == "sshkey" ]; then
    curl -s -o - http://127.0.0.1:12116/sshkey
elif [ "$1" == "sshsock" ]; then
    curl -s -o - http://127.0.0.1:12116/sshsock
elif [ "$1" == "status" ]; then
    _GPG_HOME="$(curl -s -o - http://127.0.0.1:12116/gpghome)"
    if [ "$_GPG_HOME" ]; then
        _info "GPG running on [$(curl -s -o - http://127.0.0.1:12116/gpghome)]"
        _info "Yubikey Status"
        $(which gpg) --home "$_GPG_HOME" --card-status
    else
        _warn "Service not running"
    fi
elif [ "$1" == "start" ]; then
    export GPG_HOME="$(mktemp -d)"
    init_gpg
    import_yk_publickey
    JSON_ATTRIBUTES=$(cat <<EOT
{
    "gpghome": "$GNUPGHOME",
    "home": "$BASE_PATH",
    "sshkey": "$(ssh-add -L)",
    "sshsock": "$SSH_AUTH_SOCK"
}
EOT
)
    _info "Starting background server"
    $CURL -X POST -o /dev/null -s http://127.0.0.1:12116/kill_server 2>&1 >/dev/null
    $BASE_PATH/pyykg.py "$JSON_ATTRIBUTES"
    [ $? -eq 0 ] || _fatal "Failed to start server"
    _info "Background server started successfully"
elif [ "$1" == "stop" ]; then
    export GNUPGHOME="$(curl -s -o - http://127.0.0.1:12116/gpghome)"
    clean
    _info "Killing background server"
    $CURL -X POST -o /dev/null -s http://127.0.0.1:12116/kill_server 2>&1 >/dev/null
elif [ "$1" == "keyid" ]; then
    echo "$KEY_ID"
else
    _fatal "Unrecognized command"
fi
